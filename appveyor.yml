version: 1.0.{build}
skip_tags: true
configuration: Release
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
environment:
  COVERALLS_REPO_TOKEN:
    secure: kNnGcrn1RXPd+QHyAS+I2B40ROUcC8UkxZ5LL/8gRWCYRW758QO/nbvx7iXGXm4r
before_build:
  - nuget restore ".\Promact.Oauth.Server\Promact.Oauth.Server.sln"
build:
  project: .\Promact.Oauth.Server\Promact.Oauth.Server.sln
  verbosity: minimal
test_script:
- ps: >-
   .\Slack.Automation\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user -target:".\Slack.Automation\packages\xunit.runner.console.2.1.0\tools\xunit.console.exe" "-targetargs:"".\Slack.Automation\Promact.Core.Test\bin\Release\Promact.Core.Test.dll"" -appveyor -noshadow" -filter:"+[Promact.Core.Repository*]*" -output:opencoverCoverage.xml


   if(![string]::IsNullOrEmpty($env:COVERALLS_REPO_TOKEN)){

   $coveralls = (Resolve-Path "Slack.Automation/packages/coveralls.net.*/tools/csmacnz.coveralls.exe").ToString()


   & $coveralls --opencover -i opencoverCoverage.xml --repoToken $env:COVERALLS_REPO_TOKEN --commitId $env:APPVEYOR_REPO_COMMIT --commitBranch $env:APPVEYOR_REPO_BRANCH --commitAuthor $env:APPVEYOR_REPO_COMMIT_AUTHOR --commitEmail $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL --commitMessage $env:APPVEYOR_REPO_COMMIT_MESSAGE --jobId $env:APPVEYOR_JOB_ID
   }



   

   






