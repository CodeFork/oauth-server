/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../app/consumerapp/consumerapp.module';
import * as import2 from '@angular/router/src/router_module';
import * as import3 from '@angular/common/src/common_module';
import * as import4 from '@angular/forms/src/directives';
import * as import5 from '@angular/forms/src/form_providers';
import * as import6 from '@angular2-material/core/ripple/ripple';
import * as import7 from '@angular2-material/button/button';
import * as import8 from '@angular2-material/toolbar/toolbar';
import * as import9 from '@angular2-material/sidenav/sidenav';
import * as import10 from '@angular2-material/input/input';
import * as import11 from '@angular2-material/checkbox/checkbox';
import * as import12 from 'md2/accordion/accordion';
import * as import13 from 'md2/autocomplete/autocomplete';
import * as import14 from 'md2/chips/chips';
import * as import15 from 'md2/collapse/collapse';
import * as import16 from 'md2/colorpicker/colorpicker';
import * as import17 from 'md2/data-table/data-table';
import * as import18 from 'md2/datepicker/datepicker';
import * as import19 from 'md2/dialog/dialog';
import * as import20 from 'md2/menu/menu';
import * as import21 from 'md2/multiselect/multiselect';
import * as import22 from 'md2/select/select';
import * as import23 from 'md2/tabs/tabs';
import * as import24 from 'md2/tags/tags';
import * as import25 from 'md2/toast/toast';
import * as import26 from 'md2/tooltip/tooltip';
import * as import27 from 'md2/core/portal/portal-directives';
import * as import28 from 'md2/core/overlay/overlay-directives';
import * as import29 from 'md2/core/rtl/dir';
import * as import30 from 'md2/core/a11y/index';
import * as import31 from 'md2/core/projection/projection';
import * as import32 from 'md2/core/compatibility/style-compatibility';
import * as import33 from 'md2/module';
import * as import34 from '../../../app/shared/shared.module';
import * as import35 from '@angular/common/src/localization';
import * as import36 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import37 from 'md2/colorpicker/calculateColor';
import * as import38 from '../../../app/consumerapp/consumerapp.service';
import * as import39 from '@angular/core/src/di/injector';
import * as import40 from '../../node_modules/md2/toast/toast.ngfactory';
import * as import41 from '../../node_modules/md2/tooltip/tooltip.ngfactory';
import * as import42 from './consumerapp.component.ngfactory';
import * as import43 from './consumerapp-list/consumerapp-list.component.ngfactory';
import * as import44 from './consumerapp-add/consumerapp-add.component.ngfactory';
import * as import45 from './consumerapp-edit/consumer-edit.component.ngfactory';
import * as import46 from '@angular/core/src/i18n/tokens';
import * as import47 from '../../../app/consumerapp/consumerapp.component';
import * as import48 from '../../../app/consumerapp/consumerapp-list/consumerapp-list.component';
import * as import49 from '../../../app/consumerapp/consumerapp-add/consumerapp-add.component';
import * as import50 from '../../../app/consumerapp/consumerapp-edit/consumer-edit.component';
import * as import51 from '../../../app/http.service';
import * as import52 from '@angular/router/src/router_config_loader';
class ConsumerAppModuleInjector extends import0.NgModuleInjector<import1.ConsumerAppModule> {
  _RouterModule_0:import2.RouterModule;
  _CommonModule_1:import3.CommonModule;
  _InternalFormsSharedModule_2:import4.InternalFormsSharedModule;
  _FormsModule_3:import5.FormsModule;
  _MdRippleModule_4:import6.MdRippleModule;
  _MdButtonModule_5:import7.MdButtonModule;
  _MdToolbarModule_6:import8.MdToolbarModule;
  _MdSidenavModule_7:import9.MdSidenavModule;
  _MdInputModule_8:import10.MdInputModule;
  _MdCheckboxModule_9:import11.MdCheckboxModule;
  _Md2AccordionModule_10:import12.Md2AccordionModule;
  _Md2AutocompleteModule_11:import13.Md2AutocompleteModule;
  _Md2ChipsModule_12:import14.Md2ChipsModule;
  _Md2CollapseModule_13:import15.Md2CollapseModule;
  _Md2ColorpickerModule_14:import16.Md2ColorpickerModule;
  _Md2DataTableModule_15:import17.Md2DataTableModule;
  _Md2DatepickerModule_16:import18.Md2DatepickerModule;
  _Md2DialogModule_17:import19.Md2DialogModule;
  _Md2MenuModule_18:import20.Md2MenuModule;
  _Md2MultiselectModule_19:import21.Md2MultiselectModule;
  _Md2SelectModule_20:import22.Md2SelectModule;
  _Md2TabsModule_21:import23.Md2TabsModule;
  _Md2TagsModule_22:import24.Md2TagsModule;
  _Md2ToastModule_23:import25.Md2ToastModule;
  _Md2TooltipModule_24:import26.Md2TooltipModule;
  _PortalModule_25:import27.PortalModule;
  _OverlayModule_26:import28.OverlayModule;
  _RtlModule_27:import29.RtlModule;
  _A11yModule_28:import30.A11yModule;
  _ProjectionModule_29:import31.ProjectionModule;
  _StyleCompatibilityModule_30:import32.StyleCompatibilityModule;
  _Md2Module_31:import33.Md2Module;
  _SharedModule_32:import34.SharedModule;
  _ConsumerAppModule_33:import1.ConsumerAppModule;
  __NgLocalization_34:import35.NgLocaleLocalization;
  __RadioControlRegistry_35:import36.RadioControlRegistry;
  __ColorpickerService_36:import37.ColorpickerService;
  __ROUTES_37:any[];
  __ConsumerAppService_38:import38.ConsumerAppService;
  constructor(parent:import39.Injector) {
    super(parent,[
      import40.Md2ToastComponentNgFactory,
      import41.Md2TooltipComponentNgFactory,
      import42.ConsumerAppComponentNgFactory,
      import43.ConsumerappListComponentNgFactory,
      import44.ConsumerappAddComponentNgFactory,
      import45.ConsumerappEditComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_34():import35.NgLocaleLocalization {
    if ((this.__NgLocalization_34 == (null as any))) { (this.__NgLocalization_34 = new import35.NgLocaleLocalization(this.parent.get(import46.LOCALE_ID))); }
    return this.__NgLocalization_34;
  }
  get _RadioControlRegistry_35():import36.RadioControlRegistry {
    if ((this.__RadioControlRegistry_35 == (null as any))) { (this.__RadioControlRegistry_35 = new import36.RadioControlRegistry()); }
    return this.__RadioControlRegistry_35;
  }
  get _ColorpickerService_36():import37.ColorpickerService {
    if ((this.__ColorpickerService_36 == (null as any))) { (this.__ColorpickerService_36 = new import37.ColorpickerService()); }
    return this.__ColorpickerService_36;
  }
  get _ROUTES_37():any[] {
        if ((this.__ROUTES_37 == (null as any))) { (this.__ROUTES_37 = [[{
          path: 'consumerapp',
          component: import47.ConsumerAppComponent,
          children: [
            {
              path: '',
              component: import48.ConsumerappListComponent
            }
            ,
            {
              path: 'add',
              component: import49.ConsumerappAddComponent
            }
            ,
            {
              path: 'edit/:id',
              component: import50.ConsumerappEditComponent
            }

          ]

        }
    ]]); }
    return this.__ROUTES_37;
  }
  get _ConsumerAppService_38():import38.ConsumerAppService {
    if ((this.__ConsumerAppService_38 == (null as any))) { (this.__ConsumerAppService_38 = new import38.ConsumerAppService(this.parent.get(import51.HttpService))); }
    return this.__ConsumerAppService_38;
  }
  createInternal():import1.ConsumerAppModule {
    this._RouterModule_0 = new import2.RouterModule(this.parent.get(import2.ROUTER_FORROOT_GUARD,(null as any)));
    this._CommonModule_1 = new import3.CommonModule();
    this._InternalFormsSharedModule_2 = new import4.InternalFormsSharedModule();
    this._FormsModule_3 = new import5.FormsModule();
    this._MdRippleModule_4 = new import6.MdRippleModule();
    this._MdButtonModule_5 = new import7.MdButtonModule();
    this._MdToolbarModule_6 = new import8.MdToolbarModule();
    this._MdSidenavModule_7 = new import9.MdSidenavModule();
    this._MdInputModule_8 = new import10.MdInputModule();
    this._MdCheckboxModule_9 = new import11.MdCheckboxModule();
    this._Md2AccordionModule_10 = new import12.Md2AccordionModule();
    this._Md2AutocompleteModule_11 = new import13.Md2AutocompleteModule();
    this._Md2ChipsModule_12 = new import14.Md2ChipsModule();
    this._Md2CollapseModule_13 = new import15.Md2CollapseModule();
    this._Md2ColorpickerModule_14 = new import16.Md2ColorpickerModule();
    this._Md2DataTableModule_15 = new import17.Md2DataTableModule();
    this._Md2DatepickerModule_16 = new import18.Md2DatepickerModule();
    this._Md2DialogModule_17 = new import19.Md2DialogModule();
    this._Md2MenuModule_18 = new import20.Md2MenuModule();
    this._Md2MultiselectModule_19 = new import21.Md2MultiselectModule();
    this._Md2SelectModule_20 = new import22.Md2SelectModule();
    this._Md2TabsModule_21 = new import23.Md2TabsModule();
    this._Md2TagsModule_22 = new import24.Md2TagsModule();
    this._Md2ToastModule_23 = new import25.Md2ToastModule();
    this._Md2TooltipModule_24 = new import26.Md2TooltipModule();
    this._PortalModule_25 = new import27.PortalModule();
    this._OverlayModule_26 = new import28.OverlayModule();
    this._RtlModule_27 = new import29.RtlModule();
    this._A11yModule_28 = new import30.A11yModule();
    this._ProjectionModule_29 = new import31.ProjectionModule();
    this._StyleCompatibilityModule_30 = new import32.StyleCompatibilityModule();
    this._Md2Module_31 = new import33.Md2Module();
    this._SharedModule_32 = new import34.SharedModule();
    this._ConsumerAppModule_33 = new import1.ConsumerAppModule();
    return this._ConsumerAppModule_33;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.RouterModule)) { return this._RouterModule_0; }
    if ((token === import3.CommonModule)) { return this._CommonModule_1; }
    if ((token === import4.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_2; }
    if ((token === import5.FormsModule)) { return this._FormsModule_3; }
    if ((token === import6.MdRippleModule)) { return this._MdRippleModule_4; }
    if ((token === import7.MdButtonModule)) { return this._MdButtonModule_5; }
    if ((token === import8.MdToolbarModule)) { return this._MdToolbarModule_6; }
    if ((token === import9.MdSidenavModule)) { return this._MdSidenavModule_7; }
    if ((token === import10.MdInputModule)) { return this._MdInputModule_8; }
    if ((token === import11.MdCheckboxModule)) { return this._MdCheckboxModule_9; }
    if ((token === import12.Md2AccordionModule)) { return this._Md2AccordionModule_10; }
    if ((token === import13.Md2AutocompleteModule)) { return this._Md2AutocompleteModule_11; }
    if ((token === import14.Md2ChipsModule)) { return this._Md2ChipsModule_12; }
    if ((token === import15.Md2CollapseModule)) { return this._Md2CollapseModule_13; }
    if ((token === import16.Md2ColorpickerModule)) { return this._Md2ColorpickerModule_14; }
    if ((token === import17.Md2DataTableModule)) { return this._Md2DataTableModule_15; }
    if ((token === import18.Md2DatepickerModule)) { return this._Md2DatepickerModule_16; }
    if ((token === import19.Md2DialogModule)) { return this._Md2DialogModule_17; }
    if ((token === import20.Md2MenuModule)) { return this._Md2MenuModule_18; }
    if ((token === import21.Md2MultiselectModule)) { return this._Md2MultiselectModule_19; }
    if ((token === import22.Md2SelectModule)) { return this._Md2SelectModule_20; }
    if ((token === import23.Md2TabsModule)) { return this._Md2TabsModule_21; }
    if ((token === import24.Md2TagsModule)) { return this._Md2TagsModule_22; }
    if ((token === import25.Md2ToastModule)) { return this._Md2ToastModule_23; }
    if ((token === import26.Md2TooltipModule)) { return this._Md2TooltipModule_24; }
    if ((token === import27.PortalModule)) { return this._PortalModule_25; }
    if ((token === import28.OverlayModule)) { return this._OverlayModule_26; }
    if ((token === import29.RtlModule)) { return this._RtlModule_27; }
    if ((token === import30.A11yModule)) { return this._A11yModule_28; }
    if ((token === import31.ProjectionModule)) { return this._ProjectionModule_29; }
    if ((token === import32.StyleCompatibilityModule)) { return this._StyleCompatibilityModule_30; }
    if ((token === import33.Md2Module)) { return this._Md2Module_31; }
    if ((token === import34.SharedModule)) { return this._SharedModule_32; }
    if ((token === import1.ConsumerAppModule)) { return this._ConsumerAppModule_33; }
    if ((token === import35.NgLocalization)) { return this._NgLocalization_34; }
    if ((token === import36.RadioControlRegistry)) { return this._RadioControlRegistry_35; }
    if ((token === import37.ColorpickerService)) { return this._ColorpickerService_36; }
    if ((token === import52.ROUTES)) { return this._ROUTES_37; }
    if ((token === import38.ConsumerAppService)) { return this._ConsumerAppService_38; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ConsumerAppModuleNgFactory:import0.NgModuleFactory<import1.ConsumerAppModule> = new import0.NgModuleFactory(ConsumerAppModuleInjector,import1.ConsumerAppModule);